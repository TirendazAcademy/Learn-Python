✅ 1. Soru (Doğru/Yanlış)

Recursive fonksiyonlar, kendilerini doğrudan veya dolaylı olarak çağıran fonksiyonlardır.

🟢 Doğru
🔴 Yanlış

✅ 2. Soru (Çoktan Seçmeli)

Recursive fonksiyonlarda en önemli parçalardan biri aşağıdakilerden hangisidir?

A) Döngü
B) Base case
C) Class tanımı
D) import math

🟢 B) Base case

✅ 3. Soru (Kod Çıktısı)

def selamla(n):
    if n == 0:
        print("Bitti!")
    else:
        print("Merhaba!")
        selamla(n - 1)

selamla(3)

Bu kod kaç kez “Merhaba!” yazar?

A) 2
B) 3
C) 4
D) Sonsuz

🟢 B) 3
✅ 4. Soru

Aşağıdakilerden hangisi recursive bir faktöriyel tanımıdır?

A) lambda x: x * x
B) def f(x): return 1 if x==0 else x*f(x-1)
C) for i in range(x): print(i)
D) def f(x): return x + x

🟢 B

✅ 5. Soru (Doğru/Yanlış)

Her recursive fonksiyon bir yerde durmak zorundadır.

🟢 Doğru
🔴 Yanlış

✅ 6. Soru

Base case unutulursa ne olur?

A) Kod daha hızlı çalışır
B) Sonsuz döngü oluşur
C) Fonksiyon hiç çalışmaz
D) print() çalışmaz

🟢 B) Sonsuz döngü oluşur

✅ 7. Soru

f(n) = f(n-1) + f(n-2) tanımı hangi fonksiyona aittir?

A) Faktöriyel
B) Toplama
C) Fibonacci
D) Binary Search

🟢 C) Fibonacci
✅ 8. Soru

Recursive fonksiyonlar bellekte nerede tutulur?

A) Küme
B) Döngü havuzu
C) Call stack
D) For listesi

🟢 C) Call stack
✅ 9. Soru

f(0) = 1 ifadesi faktöriyel fonksiyonunda ne işe yarar?

A) Döngüyü başlatır
B) Base case’tir
C) Geri dönüşü engeller
D) Rekürsifliği bozar

🟢 B) Base case’tir
✅ 10. Soru

Recursive algoritmalar hangi durumda tercih edilir?

A) Sıralama yapılırken
B) Basit toplama işlemlerinde
C) Ağaç yapısı, dosya sistemi gibi yapılarda
D) Rastgele sayı üretmede

🟢 C
✅ 11. Soru (Kod Çıktısı)

def say(n):
    if n == 0:
        return
    say(n - 1)
    print(n)
say(3)

Çıktı ne olur?

A) 3 2 1
B) 1 2 3
C) Hata verir
D) Hiçbir şey yazmaz

🟢 B) 1 2 3
✅ 12. Soru

Binary Search algoritmasında baslangic > bitis olduğunda ne yapılır?

A) Ortadaki elemana bakılır
B) Arama başa döner
C) Sayı bulundu sayılır
D) Arama biter, sayı yoktur

🟢 D
✅ 13. Soru

Recursive lambda fonksiyonu nasıl tanımlanır?

A) İçinde for varsa
B) Kendini çağırıyorsa
C) Bir değişkene atanarak
D) if-else içeriyorsa

🟢 C
✅ 14. Soru

Recursive fonksiyonların en büyük dezavantajı nedir?

A) Çok karmaşık görünür
B) Python desteklemez
C) Belleği hızlı tüketebilir
D) Çok fazla print yapar

🟢 C
✅ 15. Soru (Kod Çıktısı)

def f(n):
    return n if n < 2 else f(n - 1) + f(n - 2)

print(f(4))

A) 3
B) 5
C) 4
D) 6

🟢 B) 5
✅ 16. Soru

Recursive çözüm yerine döngü tercih etmek neden avantajlı olabilir?

A) Daha havalı görünür
B) Kod okunmaz olur
C) Belleği daha az tüketir
D) Base case gerekmez

🟢 C
✅ 17. Soru

Recursive fonksiyonun çalışmasını izlemek için hangi fonksiyon yardımcı olur?

A) range()
B) return
C) print()
D) input()

🟢 C
✅ 18. Soru

Fibonacci serisinde fib(1) kaçtır?

A) 0
B) 1
C) 2
D) 3

🟢 B
✅ 19. Soru

Binary Search recursive fonksiyonu hangi durumda daha az işe yarar?

A) Liste küçükse
B) Liste sıralı değilse
C) Sayı listenin ortasındaysa
D) Base case varsa

🟢 B
✅ 20. Soru

Recursive fonksiyonlar çağrıldıkça nereye eklenir?

A) Tuple
B) Liste
C) Stack (Yığın)
D) Sözlük

🟢 C